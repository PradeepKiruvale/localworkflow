name: system-test-workflow

on:
  workflow_dispatch:
    branches: [main]
  workflow_run:
    workflows: ["build-workflow"]
    branches: [main]
    types:
      - completed

jobs:
   system-test:
    runs-on: [self-hosted, Linux, arm64]
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        # https://github.com/marketplace/actions/download-workflow-artifact
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: build-workflow.yml
          workflow_conclusion: success
          branch: main
          name: debian-packages-aarch64-unknown-linux-gnu
          path: debian-package_unpack

      - name: Workaround Stop collectd mapper
        run: sudo systemctl stop tedge-mapper-collectd
        continue-on-error: true

      - name: disconnect c8y
        run: sudo tedge disconnect c8y
        # We need to continue when there is no tedge already installed
        continue-on-error: true

      - name: disconnect az
        run: sudo tedge disconnect az
        # We need to continue when there is no tedge already installed
        continue-on-error: true

      # mosquitto-clients is required for system test only, but has dependency on libmosquitto1.
      # therefore, we need to purge it here, and mosquitto-clients is required only for RPi.
      - name: purge
        run: sudo dpkg -P tedge_agent tedge_mapper tedge_apt_plugin tedge_apama_plugin tedge mosquitto-clients mosquitto libmosquitto1
        continue-on-error: true

      - name: install mosquitto
        run: sudo apt-get --assume-yes install mosquitto

      - name: install libmosquitto1
        run: sudo apt-get --assume-yes install libmosquitto1

      - name: install mosquitto-clients
        run: sudo apt-get --assume-yes install mosquitto-clients

      - name: install collectd-core
        run: sudo apt-get --assume-yes install collectd-core

      - name: install packages
        run: sudo dpkg -i ./debian-package_unpack/*.deb

      - name: run tedge help
        run: tedge --help

        # replace the default config file with tedge custom config file
      - name: configure collectd
        run: sudo cp "/etc/tedge/contrib/collectd/collectd.conf" "/etc/collectd/collectd.conf"

      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        # https://github.com/marketplace/actions/download-workflow-artifact
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: build-workflow.yml
          workflow_conclusion: success
          branch: main
          name: examples_aarch64-unknown-linux-gnu
          path: /home/pi/examples

      - name: chmod publisher
        run: chmod +x /home/pi/examples/sawtooth_publisher

      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        # https://github.com/marketplace/actions/download-workflow-artifact
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: build-workflow.yml
          workflow_conclusion: success
          branch: main
          name: tedge_dummy_plugin_aarch64-unknown-linux-gnu
          path: /home/pi/tedge_dummy_plugin

      - name: chmod dummy_plugin
        run: chmod +x /home/pi/tedge_dummy_plugin/tedge_dummy_plugin

      - name: checkout
        uses: actions/checkout@main

      - name: Run all Tests
        run:  bash  ./ci/ci_run_all_tests.sh
        env:
            C8YPASS: ${{ secrets.SECRET_C8YPASS }}
            C8YUSERNAME: ${{ secrets.SECRET_C8YUSERNAME }}
            C8YTENNANT: ${{secrets.SECRET_C8YTENANT}}
            C8YDEVICE: ${{ secrets.SECRET_C8YDEVICE }}
            C8YTENANT: ${{secrets.SECRET_C8YTENANT}}
            C8YURL: https://pradeep.latest.stage.c8y.io
            C8YDEVICEID: ${{ secrets.SECRET_C8YDEVICEID }}
            TIMEZONE: 01:00
            TEBASEDIR: /home/pi/actions-runner/_work/localworkflow/localworkflow/
            EXAMPLEDIR: /home/pi

      - name: upload results as zip
        # https://github.com/marketplace/actions/upload-a-build-artifact
        uses: actions/upload-artifact@v2
        with:
         name: results
         path: tests/
